// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.0
//
// <auto-generated>
//
// Generated from file `MiddlewareTestbed.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package MiddlewareTestbed;

public interface AFactoryPrx extends Ice.ObjectPrx
{
    public ItemPrx create_item(String name, String type)
        throws ItemAlreadyExists;

    public ItemPrx create_item(String name, String type, java.util.Map<String, String> __ctx)
        throws ItemAlreadyExists;

    public Ice.AsyncResult begin_create_item(String name, String type);

    public Ice.AsyncResult begin_create_item(String name, String type, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_create_item(String name, String type, Ice.Callback __cb);

    public Ice.AsyncResult begin_create_item(String name, String type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_create_item(String name, String type, Callback_AFactory_create_item __cb);

    public Ice.AsyncResult begin_create_item(String name, String type, java.util.Map<String, String> __ctx, Callback_AFactory_create_item __cb);

    public ItemPrx end_create_item(Ice.AsyncResult __result)
        throws ItemAlreadyExists;

    public ItemPrx take_item(String name)
        throws ItemBusy,
               ItemNotExists;

    public ItemPrx take_item(String name, java.util.Map<String, String> __ctx)
        throws ItemBusy,
               ItemNotExists;

    public Ice.AsyncResult begin_take_item(String name);

    public Ice.AsyncResult begin_take_item(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_take_item(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_take_item(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_take_item(String name, Callback_AFactory_take_item __cb);

    public Ice.AsyncResult begin_take_item(String name, java.util.Map<String, String> __ctx, Callback_AFactory_take_item __cb);

    public ItemPrx end_take_item(Ice.AsyncResult __result)
        throws ItemBusy,
               ItemNotExists;

    public void release_item(String name)
        throws ItemNotExists;

    public void release_item(String name, java.util.Map<String, String> __ctx)
        throws ItemNotExists;

    public Ice.AsyncResult begin_release_item(String name);

    public Ice.AsyncResult begin_release_item(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_release_item(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_release_item(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_release_item(String name, Callback_AFactory_release_item __cb);

    public Ice.AsyncResult begin_release_item(String name, java.util.Map<String, String> __ctx, Callback_AFactory_release_item __cb);

    public void end_release_item(Ice.AsyncResult __result)
        throws ItemNotExists;
}
